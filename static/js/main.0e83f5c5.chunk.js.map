{"version":3,"sources":["store/toolState.js","components/SettingBar.jsx","tools/Tool.js","tools/Brush.js","store/canvasState.js","tools/Rect.js","tools/Line.js","tools/Circle.js","tools/Eraser.js","components/ToolBar.jsx","components/Canvas.jsx","App.js","reportWebVitals.js","index.js"],"names":["tool","makeAutoObservable","this","color","fillColor","strokeColor","width","lineWidth","SettingBar","className","htmlFor","onChange","e","toolState","setLineWidth","target","value","style","margin","id","type","defaultValue","min","max","setStrokeColor","Tool","canvas","socket","ctx","getContext","destroyEvents","fillStyle","strokeStyle","onmousemove","onmousedown","onmouseup","Brush","listen","mouseMoveHandler","bind","mouseDownHandler","mouseUpHandler","mouseDown","send","JSON","stringify","method","figure","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","x","y","lineTo","stroke","sessionid","undoList","redoList","username","data","push","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","height","drawImage","heigth","Rect","startX","startY","saved","currentX","currentY","draw","w","h","rect","fill","Line","name","a","Circle","canvasData","curentX","curentY","r","Math","sqrt","arc","PI","Eraser","Toolbar","onClick","setTool","canvasState","setFillColor","changeColor","marginLeft","undo","redo","console","log","document","createElement","href","download","body","appendChild","click","removeChild","Canvas","observer","canvasRef","useRef","usernameRef","useState","modal","setModal","params","useParams","useEffect","setCanvas","current","axios","get","then","response","WebSocket","setSocket","setSessionId","onopen","onmessage","event","msg","parse","drawHandler","staticDraw","Modal","show","onHide","Header","Title","Body","ref","Footer","Button","variant","setUsername","onMouseDown","pushToUndo","post","App","path","to","Date","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e83f5c5.chunk.js","sourcesContent":["import {makeAutoObservable} from \"mobx\";\n\nclass ToolState {\n    tool = null\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setTool(tool) {\n        this.tool = tool\n    }\n    setFillColor(color) {\n        this.tool.fillColor = color\n    }\n    setStrokeColor(color) {\n        this.tool.strokeColor = color\n    }\n    setLineWidth(width) {\n        this.tool.lineWidth = width\n    }\n}\n\nexport default new ToolState()","import React from 'react';\nimport toolState from \"../store/toolState\";\n\nconst SettingBar = () => {\n    return (\n        <div className=\"setting-bar\">\n            <label htmlFor=\"line-width\">Толщина линии</label>\n            <input\n                onChange={e => toolState.setLineWidth(e.target.value)}\n                style={{margin: '0 10px'}}\n                id=\"line-width\"\n                type=\"number\" defaultValue={1} min={1} max={50}/>\n            <label htmlFor=\"stroke-color\">Цвет обводки</label>\n            <input onChange={e => toolState.setStrokeColor(e.target.value)} id=\"stroke-color\" type=\"color\"/>\n        </div>\n    );\n};\n\nexport default SettingBar;","export default class Tool {\n    constructor(canvas, socket, id) {\n        this.canvas = canvas\n        this.socket = socket\n        this.id = id\n        this.ctx = canvas.getContext('2d')\n        this.destroyEvents()\n    }\n\n    set fillColor(color) {\n        this.ctx.fillStyle = color\n    }\n    set strokeColor(color) {\n        this.ctx.strokeStyle = color\n    }\n\n    set lineWidth(width) {\n        this.ctx.lineWidth = width\n    }\n\n    destroyEvents() {\n        this.canvas.onmousemove = null\n        this.canvas.onmousedown = null\n        this.canvas.onmouseup = null\n    }\n}","import Tool from \"./Tool\";\n\nexport default class Brush extends Tool {\n    constructor(canvas, socket, id) {\n        super(canvas, socket, id);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n        this.socket.send(JSON.stringify({\n            method: 'draw',\n            id: this.id,\n            figure: {\n                type: 'finish',\n            }\n        }))\n    }\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        this.ctx.beginPath()\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n    }\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            // this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'brush',\n                    x: e.pageX - e.target.offsetLeft,\n                    y: e.pageY - e.target.offsetTop\n                }\n            }))\n        }\n    }\n\n    static draw(ctx, x, y) {\n        ctx.lineTo(x, y)\n        ctx.stroke()\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nclass CanvasState {\n    canvas = null\n    socket = null\n    sessionid = null\n    undoList = []\n    redoList = []\n    username = \"\"\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setSessionId(id) {\n        this.sessionid = id\n    }\n    setSocket(socket) {\n        this.socket = socket\n    }\n\n    setUsername(username) {\n        this.username = username\n    }\n\n    setCanvas(canvas) {\n        this.canvas = canvas\n    }\n\n    pushToUndo(data) {\n        this.undoList.push(data)\n    }\n\n    pushToRedo(data) {\n        this.redoList.push(data)\n    }\n\n    undo() {\n        let ctx = this.canvas.getContext('2d')\n        if (this.undoList.length > 0) {\n            let dataUrl = this.undoList.pop()\n            this.redoList.push(this.canvas.toDataURL())\n            let img = new Image()\n            img.src = dataUrl\n            img.onload =  () => {\n                ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            }\n        } else {\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.heigth)\n        }\n    }\n\n    redo() {\n        let ctx = this.canvas.getContext('2d')\n        if (this.redoList.length > 0) {\n            let dataUrl = this.redoList.pop()\n            this.undoList.push(this.canvas.toDataURL())\n            let img = new Image()\n            img.src = dataUrl\n            img.onload =  () => {\n                ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            }\n        }\n    }\n\n}\n\nexport default new CanvasState()","import Tool from \"./Tool\";\n\nexport default class Rect extends Tool {\n    constructor(canvas, socket, id) {\n        super(canvas, socket, id);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n        this.socket.send(JSON.stringify({\n            method: 'draw',\n            id: this.id,\n            figure: {\n                type: 'rect',\n                x: this.startX,\n                y: this.startY,\n                width: this.width,\n                height: this.height,\n                color: this.ctx.fillStyle\n            }\n        }))\n    }\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        this.ctx.beginPath()\n        this.startX = e.pageX - e.target.offsetLeft;\n        this.startY = e.pageY - e.target.offsetTop;\n        this.saved = this.canvas.toDataURL()\n    }\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            let currentY = e.pageY - e.target.offsetTop;\n            this.width = currentX - this.startX;\n            this.height = currentY - this.startY;\n            this.draw(this.startX, this.startY, this.width, this.height)\n        }\n    }\n\n    draw(x, y, w, h) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.rect(x, y, w, h)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }\n    }\n\n    static staticDraw(ctx, x, y, w, h, color) {\n        ctx.fillStyle = color\n        ctx.beginPath()\n        ctx.rect(x, y, w, h)\n        ctx.fill()\n        ctx.stroke()\n    }\n}","import Tool from \"./Tool\";\n\n\nexport default class Line extends Tool {\n    constructor(canvas) {\n        super(canvas);\n        this.listen()\n        this.name = 'Line'\n    }\n\n    listen() {\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n    }\n\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        this.currentX = e.pageX-e.target.offsetLeft\n        this.currentY = e.pageY-e.target.offsetTop\n        this.ctx.beginPath()\n        this.ctx.moveTo(this.currentX, this.currentY )\n        this.saved = this.canvas.toDataURL()\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n    }\n\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            this.draw(e.pageX-e.target.offsetLeft, e.pageY-e.target.offsetTop);\n        }\n    }\n\n\n    draw(x,y) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = async function () {\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.moveTo(this.currentX, this.currentY )\n            this.ctx.lineTo(x, y)\n            this.ctx.stroke()\n        }.bind(this)\n\n    }\n}","import Tool from \"./Tool\";\n\n\nexport default class Circle extends Tool {\n    constructor(canvas) {\n        super(canvas);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        let canvasData = this.canvas.toDataURL()\n        this.ctx.beginPath()\n        this.startX = e.pageX-e.target.offsetLeft\n        this.startY = e.pageY-e.target.offsetTop\n        this.saved = canvasData\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n    }\n\n    mouseMoveHandler(e) {\n        if(this.mouseDown) {\n            let curentX =  e.pageX-e.target.offsetLeft\n            let curentY =  e.pageY-e.target.offsetTop\n            let width = curentX-this.startX\n            let height = curentY-this.startY\n            let r = Math.sqrt(width**2 + height**2)\n            this.draw(this.startX, this.startY, r)\n        }\n    }\n\n    draw(x,y,r) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = async function () {\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.arc(x, y, r, 0, 2*Math.PI)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }.bind(this)\n    }\n}","import Tool from \"./Tool\";\nimport Brush from \"./Brush\";\n\nexport default class Eraser extends Brush {\n    constructor(canvas) {\n        super(canvas);\n    }\n\n\n    draw(x, y) {\n        this.ctx.strokeStyle = \"white\"\n        this.ctx.lineTo(x, y)\n        this.ctx.stroke()\n    }\n}","import React from 'react';\nimport '../styles/toolbar.scss'\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport canvasState from \"../store/canvasState\";\nimport Rect from \"../tools/Rect\";\nimport Line from \"../tools/Line\";\nimport Circle from \"../tools/Circle\";\nimport Eraser from \"../tools/Eraser\";\n\nconst Toolbar = () => {\n\n    const changeColor = e => {\n        toolState.setStrokeColor(e.target.value)\n        toolState.setFillColor(e.target.value)\n    }\n\n    const download = () => {\n        const dataUrl = canvasState.canvas.toDataURL()\n        console.log(dataUrl)\n        const a = document.createElement('a')\n        a.href = dataUrl\n        a.download = canvasState.sessionid + \".jpg\"\n        document.body.appendChild(a)\n        a.click()\n        document.body.removeChild(a)\n    }\n\n    return (\n        <div className=\"toolbar\">\n            <button className=\"toolbar__btn brush\" onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\n            <button className=\"toolbar__btn rect\" onClick={() => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\n            <button className=\"toolbar__btn circle\" onClick={() => toolState.setTool(new Circle(canvasState.canvas))}/>\n            <button className=\"toolbar__btn eraser\" onClick={() => toolState.setTool(new Eraser(canvasState.canvas))}/>\n            <button className=\"toolbar__btn line\" onClick={() => toolState.setTool(new Line(canvasState.canvas))}/>\n            <input onChange={e => changeColor(e)} style={{marginLeft:10}} type=\"color\"/>\n            <button className=\"toolbar__btn undo\" onClick={() => canvasState.undo()}/>\n            <button className=\"toolbar__btn redo\" onClick={() => canvasState.redo()}/>\n            <button className=\"toolbar__btn save\" onClick={() => download()}/>\n        </div>\n    );\n};\n\nexport default Toolbar;","import React, {useEffect, useRef, useState} from 'react';\nimport \"../styles/canvas.scss\"\nimport {observer} from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport  {Modal, Button} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\"\nimport Rect from \"../tools/Rect\";\nimport axios from 'axios'\n\nconst Canvas = observer(() => {\n    const canvasRef = useRef()\n    const usernameRef = useRef()\n    const [modal, setModal] = useState(true)\n    const params = useParams()\n\n    useEffect(() => {\n        canvasState.setCanvas(canvasRef.current)\n        let ctx = canvasRef.current.getContext('2d')\n        axios.get(`http://localhost:5000/image?id=${params.id}`)\n            .then(response => {\n                const img = new Image()\n                img.src = response.data\n                img.onload = () => {\n                    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\n                    ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height)\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (canvasState.username) {\n            const socket = new WebSocket(`ws://localhost:5000/`);\n            canvasState.setSocket(socket)\n            canvasState.setSessionId(params.id)\n            toolState.setTool(new Brush(canvasRef.current, socket, params.id))\n            socket.onopen = () => {\n                console.log('Подключение установлено')\n                socket.send(JSON.stringify({\n                    id:params.id,\n                    username: canvasState.username,\n                    method: \"connection\"\n                }))\n            }\n            socket.onmessage = (event) => {\n                let msg = JSON.parse(event.data)\n                switch (msg.method) {\n                    case \"connection\":\n                        console.log(`пользователь ${msg.username} присоединился`)\n                        break\n                    case \"draw\":\n                        drawHandler(msg)\n                        break\n                }\n            }\n        }\n    }, [canvasState.username])\n\n    const drawHandler = (msg) => {\n        const figure = msg.figure\n        const ctx = canvasRef.current.getContext('2d')\n        switch (figure.type) {\n            case \"brush\":\n                Brush.draw(ctx, figure.x, figure.y)\n                break\n            case \"rect\":\n                Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color)\n                break\n            case \"finish\":\n                ctx.beginPath()\n                break\n        }\n    }\n\n\n    const mouseDownHandler = () => {\n        canvasState.pushToUndo(canvasRef.current.toDataURL())\n        axios.post(`http://localhost:5000/image?id=${params.id}`, {img: canvasRef.current.toDataURL()})\n            .then(response => console.log(response.data))\n    }\n\n    const connectHandler = () => {\n        canvasState.setUsername(usernameRef.current.value)\n        setModal(false)\n    }\n\n    return (\n        <div className=\"canvas\">\n            <Modal show={modal} onHide={() => {}}>\n                <Modal.Header >\n                    <Modal.Title>Введите ваше имя</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <input type=\"text\" ref={usernameRef}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => connectHandler()}>\n                        Войти\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400}/>\n        </div>\n    );\n});\n\nexport default Canvas;","import React from 'react';\nimport \"./styles/app.scss\"\nimport SettingBar from \"./components/SettingBar\";\nimport Toolbar from \"../src/components/ToolBar\";\nimport Canvas from \"./components/Canvas\";\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <Switch>\n                    <Route path='/:id'>\n                        <Toolbar/>\n                        <SettingBar/>\n                        <Canvas/>\n                    </Route>\n                    <Redirect to={`f${(+new Date).toString(16)}`}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}